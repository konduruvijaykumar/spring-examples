<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">
   
   <context:annotation-config/>
   <!-- Use below component scan only when @component is present with both foo concrete beans and below xml definition are removed else there would be overriding with one of the configurations done, here in this example xml config was given preference by overriding. See App.java for more info -->
   <!-- <context:component-scan base-package="org.pjay.springcore"/> -->
   
   <!-- Can try primary attribute in bean xml definition or at bean object level with component annotation -->
   <!-- else try Qualifier or Resource annotation with specific bean name(defined in xml or if not use class name with first letter changing to lower case) you want to use -->
   <bean id="fooOne" class="org.pjay.springcore.contract.contractimpl.FooOne"><!-- primary="true" -->
   	<property name="name" value="Foo_ContractImpl_One"/>
   	<property name="pincode" value="560001"/>
   	<property name="age" value="21"/>
   </bean>
   
   <bean id="fooTwo" class="org.pjay.springcore.contract.contractimpl.FooTwo"><!-- primary="true" -->
   	<property name="name" value="Foo_ContractImpl_Two"/>
   	<property name="pincode" value="560002"/>
   	<property name="age" value="22"/>
   </bean>
   
   <bean id="bar" class="org.pjay.springcore.Bar"><!-- autowire="byType" -->
   </bean>
   
</beans>